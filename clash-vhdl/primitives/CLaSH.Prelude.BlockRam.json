[ { "BlackBox" :
    { "name" : "CLaSH.Prelude.BlockRam.blockRam#"
    , "type" :
"blockRam# :: KnownNat n       -- ARG[0]
           => SClock clk       -- clk,  ARG[1]
           -> Vec n a          -- init, ARG[2]
           -> Signal' clk Int  -- wr,   ARG[3]
           -> Signal' clk Int  -- rd,   ARG[4]
           -> Signal' clk Bool -- wren, ARG[5]
           -> Signal' clk a    -- din,  ARG[6]
           -> Signal' clk a"
    , "templateD" :
"-- blockRam begin
blockRam_~COMPNAME_~SYM[0] : block
  signal RAM_~SYM[1]  : ~TYP[2] := ~LIT[2];
  signal dout_~SYM[2] : ~TYP[6];
  signal wr_~SYM[3]   : integer range 0 to ~LIT[0] - 1;
  signal rd_~SYM[4]   : integer range 0 to ~LIT[0] - 1;
begin
  wr_~SYM[3] <= to_integer(~ARG[3]
  -- pragma translate_off
                mod ~LIT[0]
  -- pragma translate_on
                );

  rd_~SYM[4] <= to_integer(~ARG[4]
  -- pragma translate_off
                mod ~LIT[0]
  -- pragma translate_on
                );

  blockRam_sync : process(~CLK[1])
  begin
    if rising_edge(~CLK[1]) then
      if ~ARG[5] then
        RAM_~SYM[1](wr_~SYM[3]) <= ~ARG[6];
      end if;
      dout_~SYM[2] <= RAM_~SYM[1](rd_~SYM[4]);
    end if;
  end process;

  ~RESULT <= dout_~SYM[2];
end block;
-- blockRam end"
    }
  }
]
